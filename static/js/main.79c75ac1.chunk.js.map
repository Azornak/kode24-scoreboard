{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","teamRankings","userRankings","teamMembers","fetchRankings","bind","this","fetch","then","res","json","userScores","filter","x","members","includes","id","sort","a","b","points","setState","teamScores","rankOne","rank","length","name","slice","className","aventoInTheLead","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","memberCount","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79c75ac1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport members from './data/team.json';\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      teamRankings: [],\r\n      userRankings: [],\r\n      teamMembers: []\r\n    }\r\n\r\n    this.fetchRankings = this.fetchRankings.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchRankings();\r\n  }\r\n\r\n  fetchRankings(){\r\n    fetch('https://azor-proxy.herokuapp.com/https://kodeskole-beta.kode24.no/api/highscore').then(res => {\r\n      res.json().then(json => {\r\n        const teamMembers = json.userScores.filter(x => members.includes(x.id)).sort((a,b) => a.points < b.points ? 1 : -1);\r\n        this.setState({\r\n          teamRankings: json.teamScores,\r\n          userRankings: json.userScores,\r\n          teamMembers\r\n        });\r\n      })\r\n    })\r\n  }\r\n\r\n  aventoInTheLead(){\r\n    let rankOne = this.state.teamRankings.filter(x => x.rank === 1);\r\n    if(this.state.teamRankings.length === 0)\r\n      return <h3>Kode24 kodeskole - Henter data...</h3>\r\n\r\n    if(rankOne.length === 1 && rankOne[0].name === 'AVENTO'){\r\n      return <h3>Kode24 kodeskole - Vi leder! üéâüéâüéâ</h3>\r\n    }\r\n    else if(rankOne.length > 1 && rankOne.filter(x => x.name === 'AVENTO').length > 0){\r\n      return <h3>Kode24 kodeskole - Uavgjort üòê</h3>\r\n    }\r\n\r\n    return <h3>Kode24 kodeskole - Vi leder ikke lengre üò¢</h3>\r\n  }\r\n\r\n  render(){\r\n    const teamRankings = this.state.teamRankings.slice(0,10);\r\n    const teamMembers = this.state.teamMembers.filter(x => x.points > 0);\r\n    return(\r\n    <div className=\"main\">\r\n      <div className=\"header\">{this.aventoInTheLead()}</div>\r\n\r\n      <TableContainer className=\"tablecontainer\" component={Paper}>\r\n        <Table className=\"ranking-table\" aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow className=\"header\">\r\n              <TableCell>Rank</TableCell>\r\n              <TableCell>Team</TableCell>\r\n              <TableCell>Score</TableCell>\r\n              <TableCell>Members</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {teamRankings.map((row) => (\r\n              <TableRow className=\"tablerow\" key={row.name}>\r\n                <TableCell>{row.rank}</TableCell>\r\n                <TableCell>{row.name === 'AVENTO' ? <b>{row.name}</b> : row.name}</TableCell>\r\n                <TableCell>{row.points}</TableCell>\r\n                <TableCell>{row.memberCount}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TableContainer className=\"tablecontainer\" component={Paper}>\r\n        <Table className=\"ranking-table\" aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow className=\"header\">\r\n              <TableCell>Rank</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Score</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {teamMembers.map((row) => (\r\n              <TableRow className=\"tablerow\" key={row.name}>\r\n                <TableCell>{row.rank}</TableCell>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell>{row.points}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}