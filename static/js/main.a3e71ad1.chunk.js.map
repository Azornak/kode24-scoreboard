{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","teamRankings","userRankings","fetchRankings","bind","this","fetch","then","res","json","setState","teamScores","userScores","rankOne","filter","x","rank","length","name","slice","className","aventoInTheLead","TableContainer","style","width","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","points","memberCount","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAiFeA,E,kDAvEb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,aAAc,GACdC,aAAc,IAGhB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBAPL,E,gEAWhBC,KAAKF,kB,sCAGS,IAAD,OACbG,MAAM,sFAAsFC,MAAK,SAAAC,GAC/FA,EAAIC,OAAOF,MAAK,SAAAE,GACd,EAAKC,SAAS,CACZT,aAAcQ,EAAKE,WACnBT,aAAcO,EAAKG,qB,wCAOzB,IAAIC,EAAUR,KAAKL,MAAMC,aAAaa,QAAO,SAAAC,GAAC,OAAe,IAAXA,EAAEC,QACpD,OAAsC,IAAnCX,KAAKL,MAAMC,aAAagB,OAClB,mEAEa,IAAnBJ,EAAQI,QAAoC,WAApBJ,EAAQ,GAAGK,KAC7B,mGAEDL,EAAQI,OAAS,GAAKJ,EAAQC,QAAO,SAAAC,GAAC,MAAe,WAAXA,EAAEG,QAAmBD,OAAS,EACvE,0EAGF,wF,+BAIP,IAAMhB,EAAeI,KAAKL,MAAMC,aAAakB,MAAM,EAAE,IACrD,OACA,sBAAKC,UAAU,OAAf,UACGf,KAAKgB,kBACN,cAACC,EAAA,EAAD,CAAgBC,MAAO,CAACC,MAAO,QAAQJ,UAAU,iBAAiBK,UAAWC,IAA7E,SACE,eAACC,EAAA,EAAD,CAAOP,UAAU,gBAAgBQ,aAAW,mBAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAUV,UAAU,SAApB,UACE,cAACW,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,2BAGJ,cAACC,EAAA,EAAD,UACG/B,EAAagC,KAAI,SAACC,GAAD,OAChB,eAACJ,EAAA,EAAD,CAAUV,UAAU,WAApB,UACE,cAACW,EAAA,EAAD,UAAYG,EAAIlB,OAChB,cAACe,EAAA,EAAD,UAAyB,WAAbG,EAAIhB,KAAoB,4BAAIgB,EAAIhB,OAAYgB,EAAIhB,OAC5D,cAACa,EAAA,EAAD,UAAYG,EAAIC,SAChB,cAACJ,EAAA,EAAD,UAAYG,EAAIE,gBAJkBF,EAAIhB,uB,GA1DpCmB,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a3e71ad1.chunk.js","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      teamRankings: [],\n      userRankings: []\n    }\n\n    this.fetchRankings = this.fetchRankings.bind(this);\n  }\n\n  componentDidMount(){\n    this.fetchRankings();\n  }\n\n  fetchRankings(){\n    fetch('https://cors-anywhere.herokuapp.com/https://kodeskole-beta.kode24.no/api/highscore').then(res => {\n      res.json().then(json => {\n        this.setState({\n          teamRankings: json.teamScores,\n          userRankings: json.userScores\n        });\n      })\n    })\n  }\n\n  aventoInTheLead(){\n    let rankOne = this.state.teamRankings.filter(x => x.rank === 1);\n    if(this.state.teamRankings.length === 0)\n      return <h3>Kode24 kodeskole - Henter data...</h3>\n\n    if(rankOne.length === 1 && rankOne[0].name === 'AVENTO'){\n      return <h3>Kode24 kodeskole - Vi leder! 🎉🎉🎉</h3>\n    }\n    else if(rankOne.length > 1 && rankOne.filter(x => x.name === 'AVENTO').length > 0){\n      return <h3>Kode24 kodeskole - Uavgjort 😐</h3>\n    }\n\n    return <h3>Kode24 kodeskole - Vi leder ikke lengre 😢</h3>\n  }\n\n  render(){\n    const teamRankings = this.state.teamRankings.slice(0,10);\n    return(\n    <div className=\"main\">\n      {this.aventoInTheLead()}\n      <TableContainer style={{width: '40vw'}}className=\"tablecontainer\" component={Paper}>\n        <Table className=\"ranking-table\" aria-label=\"customized table\">\n          <TableHead>\n            <TableRow className=\"header\">\n              <TableCell>Rank</TableCell>\n              <TableCell>Team</TableCell>\n              <TableCell>Score</TableCell>\n              <TableCell>Members</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {teamRankings.map((row) => (\n              <TableRow className=\"tablerow\" key={row.name}>\n                <TableCell>{row.rank}</TableCell>\n                <TableCell>{row.name === 'AVENTO' ? <b>{row.name}</b> : row.name}</TableCell>\n                <TableCell>{row.points}</TableCell>\n                <TableCell>{row.memberCount}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>);\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}